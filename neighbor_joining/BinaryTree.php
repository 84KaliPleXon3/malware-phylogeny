<?php class BinaryTree {
	var $left;
	var $left_distance;
	var $right;
	var $right_distance;
	var $label;
	var $depth;

	public function __construct()
	{
		$this->left = null;
		$this->left_distance = null;
		$this->right = null;
		$this->right_distance = null;
		$this->label = null;
		$this->depth = 0.0;
	}

	public function set_child(BinaryTree $child_node, $dist_to_child)
	{
		if (!isset($this->left)) {
			$this->left = $child_node;
			$this->left_distance = $dist_to_child;
		} else if (!isset($this->right)) {
			$this->right = $child_node;
			$this->right_distance = $dist_to_child;
		}
	}

	public function traverse($depth_so_far)
	{
		$this->depth = $depth_so_far;
		if (!isset($this->left) && !isset($this->right))
		{
			# It's a leaf node.
			$label_length = strlen($this->label);
			$leaf_node_count = 1;
			$depth = $depth_so_far;
		} else {
			if (isset($this->left))
				list($llabel_length, $lleaf_node_count, $ldist)
					= $this->left->traverse($depth_so_far + $this->left_distance);
			if (isset($this->right))
				list($rlabel_length, $rleaf_node_count, $rdist)
					= $this->right->traverse($depth_so_far + $this->right_distance);

			$label_length = max($llabel_length, $rlabel_length);
			$leaf_node_count = $lleaf_node_count +$rleaf_node_count;
			$depth = max($ldist, $rdist);
		}
		return array($label_length, $leaf_node_count, $depth);
	}

	private function draw_group(GroupingImage $ctxt) {

		if (isset($this->left) && isset($this->right)) {
			// Interior node.
			list($el1_x, $el1_y) = $this->left->draw_group($ctxt);

			list($el2_x, $el2_y) = $this->right->draw_group($ctxt);

			list($return_x, $return_y)
				= $ctxt->draw_node(
					$el1_x, $el1_y, $this->left_distance,
					$el2_x, $el2_y, $this->right_distance
				);

		} else {
			list($return_x, $return_y) = $ctxt->draw_leaf($this->label, $this->depth);
		}

		return array($return_x, $return_y);
	}

	// Called on root node of a BinaryTree structure.
	public function draw_image($h, $v, $leafnode_count, $depth, $max_label_length) {
		$ctxt = new GroupingImage($h, $v, $leafnode_count, $depth, $max_label_length);
		list($x,$y) = $this->draw_group($ctxt);
		$ctxt->draw_root($x, $y);
		$img = $ctxt->image;
		$ctxt->image = NULL;
		return $img;
	}
}
?>
