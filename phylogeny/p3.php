#!/usr/bin/env php
<?php
include("Species.php");


list($species_names, $trait_lists) = read_traits($argv[1]);

$species_array = array();
foreach ($species_names as $idx => $name) {
	$new_species = new Species($name, $trait_lists[$idx]);
	$species_array[] = $new_species;
}

if (usort($species_array, 'cmp_species_objects') === FALSE) {
	fprintf(STDERR, "Problem with sort\n");
	exit;
}

/*
fprintf(STDERR, "Sorted species array:\n");
foreach ($species_array as $species) {
	fprint(STDERR, "Species named {$species->name} has {$species->trait_count} traits: ");
	$comma = '';
	foreach ($species->trait_list as $trait_number) {
		print($comma.$trait_number);
		$comma = ', ';
	}
	print("\n");
}
*/

$root_species = array();

while (count($species_array) > 0) {
	$current_species = array_shift($species_array);
	// print("Current species: {$current_species->name}\n");

	$added_as_child = false;

	foreach ($species_array as $next_species) {
		// print("\tNext species: {$next_species->name}\n");
		if ($current_species->contains($next_species)) {
			// print("\t\t{$current_species->name} contains all of {$next_species->name} traits.\n");
			$next_species->add_child($current_species);
			$added_as_child = true;
			$current_species->mark_traits($next_species);
			$unmarked_traits = $current_species->count_unmarked();
			// print("\t\t{$current_species->name} still needs to match $unmarked_traits traits.\n");
			if ($unmarked_traits == 1) break;
		}
	}

	if (!$added_as_child)
		$root_species[] = $current_species;
}

foreach ($root_species as $root) {
	$root->draw();
}


exit;

function read_traits($directoryname) {
	$taxa_names = array();
	$traits_list = array();
	$r = opendir($directoryname);
	if ($r !== false) {
		while (($fn = readdir($r)) !== false) {
			if ($fn != "." && $fn != "..") {
				$traits = read_traits_from_file($directoryname.'/'.$fn);
				$taxa_names[] = $fn;
				$traits_list[] = $traits;
			}
		}
		closedir($r);
	} else {
		fprintf(STDERR, "Problem opening directory $directoryname\n");
	}
	return array($taxa_names, $traits_list);
}

function read_traits_from_file($filename)
{
	$M = array();
	$hdl = fopen($filename, "r");
	if ($hdl !== FALSE) {
		while (($line = fgets($hdl)) !== false) {
			$n = intval($line);
			$M[] = $n;
		}
		fclose($hdl);
	} else {
		fprintf(STDERR, "Problem opening \"$filename\" for read\n");
	}
	return $M;
}
